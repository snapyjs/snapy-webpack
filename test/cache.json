{"chunks":{"set":true,"value":{"test.coffee":"0c7bd29d754b3df588889f56fa7f2532"}},"54dac68bf7e01643a28620bafa50a1390":{"set":true,"value":"\n\u001b[1mchunk: main\u001b[22m (./test/_entry.js)\n  ./test/_dep.js\n  ./test/_entry.js"},"dedec6737a6c30597d49d2dbd5cb4df40":{"set":true,"value":"./test/_error.js\nModule parse failed: Unexpected token (1:10)\nYou may need an appropriate loader to handle this file type.\n| malformed js"},"f6124d6161c0d9e7960e3a67f95ee3530":{"set":true,"value":"WebpackOptionsValidationError: Invalid configuration object. Webpack has been initialised using a configuration object that does not match the API schema.\n - configuration.entry should be one of these:\n   object { <key>: non-empty string | [non-empty string] } | non-empty string | [non-empty string] | function\n   -> The entry point(s) of the compilation.\n   Details:\n    * configuration.entry should be an object.\n      -> Multiple entry bundles are created. The key is the chunk name. The value can be a string or an array.\n    * configuration.entry should be a string.\n      -> An entry point without name. The string is resolved to a module which is loaded upon startup.\n    * configuration.entry should be an array:\n      [non-empty string]\n    * configuration.entry should be an instance of function\n      -> A Function returning an entry object, an entry string, an entry array or a promise to these things."}}
